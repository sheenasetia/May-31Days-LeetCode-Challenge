class Solution {
   
    public String removeKdigits(String num, int k) {
       
        int size=num.length();
        if(k==size)
            return "0";
        
        Stack<Character> st=new Stack<>();
        for(int i=0;i<size;i++)
        {
            while(k>0 && !st.isEmpty() && st.peek()>num.charAt(i)) 
            {
                st.pop(); // whenever encounter a digit which is less than the previous one , pop it
                k--;
            }
            
            st.push(num.charAt(i));
            
        }
        
        //for inputs like 1111 where nothing is removed
        while(k>0)
        {
            st.pop();
            k--;
        }
        
        StringBuilder sb=new StringBuilder();
        
        while(!st.isEmpty())
        {
            char curr=st.pop();
            sb.append(curr);
        }
        
        sb.reverse();
        
        //remove all the leading 0's
        while(sb.length() > 1 && sb.charAt(0)=='0')
        {
            sb.deleteCharAt(0);
        }
        
        return sb.toString();
        
    }
    
}
